version: '3.8'

services:
  postgres:
    build: ./postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_project_network

  mongo:
    build: ./mongo/mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - my_project_network

  django:
    build: ./django
    command: ["./wait-for-it.sh", "${DJANGO_DB:-postgres}:${DJANGO_DB_PORT:-5432}", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ./django:/app
      - ./scripts:/scripts
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongo
    networks:
      - my_project_network
    environment:
      DB_HOST: ${DJANGO_DB:-postgres}
      DB_PORT: ${DJANGO_DB_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}

  node:
    build: ./node
    command: ["./wait-for-it.sh", "${NODE_DB:-mongo}:${NODE_DB_PORT:-27017}", "--", "npm", "start"]
    volumes:
      - ./node:/app
      - ./scripts:/scripts
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - mongo
    networks:
      - my_project_network
    environment:
      DB_HOST: ${NODE_DB:-mongo}
      DB_PORT: ${NODE_DB_PORT:-27017}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}

  react-app:
    build: ./react-app
    ports:
      - "3000:3000"
    depends_on:
      - django
      - node
    networks:
      - my_project_network

volumes:
  postgres_data:
  mongo_data:

networks:
  my_project_network:
